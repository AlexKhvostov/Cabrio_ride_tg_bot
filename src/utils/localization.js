/**
 * –£—Ç–∏–ª–∏—Ç–∞ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –ª–æ–∫–∞–ª–∏–∑–∞—Ü–∏–µ–π
 */

const messages = require('../locales/ru');

/**
 * –ü–æ–ª—É—á–∏—Ç—å –ª–æ–∫–∞–ª–∏–∑–æ–≤–∞–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ –∫–ª—é—á—É
 * @param {string} key - –ö–ª—é—á —Å–æ–æ–±—â–µ–Ω–∏—è (–Ω–∞–ø—Ä–∏–º–µ—Ä: 'common.error')
 * @param {object} params - –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –¥–ª—è –ø–æ–¥—Å—Ç–∞–Ω–æ–≤–∫–∏
 * @returns {string} –õ–æ–∫–∞–ª–∏–∑–æ–≤–∞–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
 */
function getMessage(key, params = {}) {
    try {
        const keys = key.split('.');
        let message = messages;
        
        for (const k of keys) {
            if (message[k] === undefined) {
                console.error(`–õ–æ–∫–∞–ª–∏–∑–∞—Ü–∏—è: –∫–ª—é—á "${key}" –Ω–µ –Ω–∞–π–¥–µ–Ω`);
                return `[MISSING: ${key}]`;
            }
            message = message[k];
        }
        
        // –ü–æ–¥—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤
        if (typeof message === 'string' && Object.keys(params).length > 0) {
            return formatMessage(message, params);
        }
        
        return message;
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ª–æ–∫–∞–ª–∏–∑–∞—Ü–∏–∏:', error);
        return `[ERROR: ${key}]`;
    }
}

/**
 * –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è —Å –ø–æ–¥—Å—Ç–∞–Ω–æ–≤–∫–æ–π –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤
 * @param {string} template - –®–∞–±–ª–æ–Ω —Å–æ–æ–±—â–µ–Ω–∏—è
 * @param {object} params - –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –¥–ª—è –ø–æ–¥—Å—Ç–∞–Ω–æ–≤–∫–∏
 * @returns {string} –û—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
 */
function formatMessage(template, params) {
    let result = template;
    
    for (const [key, value] of Object.entries(params)) {
        const placeholder = `{${key}}`;
        const escapedPlaceholder = placeholder.replace(/[{}]/g, '\\$&');
        result = result.replace(new RegExp(escapedPlaceholder, 'g'), value !== undefined ? value : '');
    }
    
    return result;
}

/**
 * –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–∞—Ç—ã –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
 * @param {Date|string} date - –î–∞—Ç–∞
 * @returns {string} –û—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –¥–∞—Ç–∞
 */
function formatDate(date) {
    if (!date) return '–ù–µ —É–∫–∞–∑–∞–Ω–æ';
    
    const d = new Date(date);
    if (isNaN(d.getTime())) return '–ù–µ–≤–µ—Ä–Ω–∞—è –¥–∞—Ç–∞';
    
    return d.toLocaleDateString('ru-RU', {
        day: '2-digit',
        month: '2-digit',
        year: 'numeric'
    });
}

/**
 * –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–∏
 * @param {string} country - –°—Ç—Ä–∞–Ω–∞
 * @param {string} city - –ì–æ—Ä–æ–¥
 * @returns {string} –û—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ
 */
function formatLocation(country, city) {
    const parts = [];
    if (country) parts.push(country);
    if (city) parts.push(city);
    return parts.length > 0 ? parts.join(', ') : '–ù–µ —É–∫–∞–∑–∞–Ω–æ';
}

/**
 * –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –¥–≤–∏–≥–∞—Ç–µ–ª–µ
 * @param {number} volume - –û–±—ä–µ–º –¥–≤–∏–≥–∞—Ç–µ–ª—è
 * @param {number} power - –ú–æ—â–Ω–æ—Å—Ç—å –¥–≤–∏–≥–∞—Ç–µ–ª—è
 * @returns {string} –û—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –¥–≤–∏–≥–∞—Ç–µ–ª–µ
 */
function formatEngine(volume, power) {
    const parts = [];
    if (volume) parts.push(`${volume}–ª`);
    if (power) parts.push(`${power} –ª.—Å.`);
    return parts.length > 0 ? parts.join(', ') : '–ù–µ —É–∫–∞–∑–∞–Ω–æ';
}

/**
 * –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç–∏–ø–∞ –∫—Ä—ã—à–∏
 * @param {string} roofType - –¢–∏–ø –∫—Ä—ã—à–∏
 * @returns {string} –û—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ç–∏–ø –∫—Ä—ã—à–∏
 */
function formatRoofType(roofType) {
    const types = {
        'soft': '–ú—è–≥–∫–∞—è',
        'hard': '–ñ–µ—Å—Ç–∫–∞—è',
        'targa': '–¢–∞—Ä–≥–∞'
    };
    return types[roofType] || roofType || '–ù–µ —É–∫–∞–∑–∞–Ω–æ';
}

/**
 * –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞
 * @param {string} status - –°—Ç–∞—Ç—É—Å
 * @returns {string} –û—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Å—Ç–∞—Ç—É—Å
 */
function formatStatus(status) {
    const statuses = {
        '–Ω–æ–≤—ã–π': 'üÜï –ù–æ–≤—ã–π',
        '—É—á–∞—Å—Ç–Ω–∏–∫': '‚ö™ –£—á–∞—Å—Ç–Ω–∏–∫',
        '–∞–∫—Ç–∏–≤–Ω—ã–π': '‚úÖ –ê–∫—Ç–∏–≤–Ω—ã–π',
        '–≤—ã—à–µ–ª': '‚ùå –í—ã—à–µ–ª',
        '–±–µ–∑ –∞–≤—Ç–æ': 'üö´ –ë–µ–∑ –∞–≤—Ç–æ',
        'invite': 'üì® –ü—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ',
        '–ø—Ä–æ–¥–∞–Ω': 'üí∞ –ü—Ä–æ–¥–∞–Ω',
        '–≤ —Ä–µ–º–æ–Ω—Ç–µ': 'üîß –í —Ä–µ–º–æ–Ω—Ç–µ',
        '—Ä–∞–∑–±–∏—Ç': 'üí• –†–∞–∑–±–∏—Ç',
        '–ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ': 'üì® –ü—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ'
    };
    return statuses[status] || status || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ';
}

/**
 * –ë–µ–∑–æ–ø–∞—Å–Ω–æ–µ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∑–Ω–∞—á–µ–Ω–∏—è
 * @param {any} value - –ó–Ω–∞—á–µ–Ω–∏–µ
 * @param {string} defaultValue - –ó–Ω–∞—á–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
 * @returns {string} –ë–µ–∑–æ–ø–∞—Å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ
 */
function safeValue(value, defaultValue = '–ù–µ —É–∫–∞–∑–∞–Ω–æ') {
    if (value === null || value === undefined || value === '') {
        return defaultValue;
    }
    return String(value);
}

module.exports = {
    getMessage,
    formatMessage,
    formatDate,
    formatLocation,
    formatEngine,
    formatRoofType,
    formatStatus,
    safeValue
}; 